@use "../../abstracts/mixins" as *;
@use "../../abstracts/colors" as c;
@use "../../abstracts/variables" as v;
@use "../../base/functions" as func;
@use "../../base/breakpoints" as b;

.article {
  @media screen and (width >= b.$article-desktop) {
    @include flex();
  }
  &:has(.article__section) {
    display: grid;
    @media screen and (width >= b.$tablet) {
      grid-template-columns: repeat(4, 1fr);
    }

    @media screen and (b.$mobile-md <= width <= b.$tablet) {
      grid-template-columns: 1fr 1fr;
      grid-template-rows: 1fr 1fr;
      & > :first-child,
      & > :nth-child(2) {
        margin-bottom: func.rem(1);
      }
    }

    @media screen and (width < b.$mobile-md) {
      grid-template-rows: repeat(4, 1fr);
      & > :not(:last-child) {
        margin-bottom: func.rem(1);
      }
    }
  }

  &__img-container {
    @media screen and (width >= b.$article-desktop) {
      width: 66%;
      &:is(:only-child) {
        width: 100%;
      }
    }

    & img {
      object-fit: cover;
      width: 100%;
      height: 100%;
      @media screen and (width < b.$mobile-md) {
        aspect-ratio: 3/4;
      }
    }
  }

  &__heading {
    font-size: 1.5rem;
    margin-bottom: 2rem;
  }

  &__text-container {
    background-color: c.$grayish;
    color: inherit;
    @media screen and (width >= b.$article-desktop) {
      width: 34%;
      padding: 3rem;
    }
    @media screen and (width < b.$article-desktop) {
      padding: func.rem(80);
      & > * {
        max-width: 80%;
      }
    }
    @media screen and (width < b.$tablet) {
      padding: func.rem(40);
      padding-bottom: func.rem(60);
    }
    @media screen and (width < b.$mobile-md) {
      & > * {
        max-width: 100%;
      }
    }

    &--accent {
      background-color: c.$red;
      color: c.$white;
    }

    & .article__heading {
      font-size: 1.5rem;
      margin-bottom: 0.5rem;

      &:is(strong) {
        display: inline-block;
      }
    }
  }

  &__text {
    color: inherit;
    margin-bottom: 1.5rem;
  }

  @media screen and (width >= b.$article-desktop) {
    &.col-reverse {
      flex-direction: row-reverse;
    }
  }

  &__section {
    margin-right: func.rem(1);
    padding: 2rem;
    background-color: c.$grayish;
    color: c.$text-gray;

    & h3 {
      font-size: 1rem;
      color: c.$black;
    }

    & a {
      text-decoration: underline;
      transition: v.$main-transition;

      &:hover {
        color: c.$black;
      }
    }

    & > *:not(:last-child) {
      margin-bottom: 0.25rem;
    }
  }

  &__slide {
    position: relative;
    // width: calc(309px * (3 / 4));
    aspect-ratio: 3/4;
    margin-bottom: 2.5rem;
    background-color: c.$grayish;
    font-size: 1rem;
    color: inherit;
    isolation: isolate;
    cursor: pointer;

    &--accent {
      background-color: c.$red;
      color: c.$white;
    }

    &:hover a {
      text-decoration: none;
      & h3 {
        text-decoration: underline;
      }
    }
    &:hover img {
      opacity: 0.75;
    }

    & h3 {
      font-size: inherit;
    }

    & .flex-container {
      padding: func.rem(40) 2rem;

      @include flex(column, flex-end, center);
      height: 100%;
      width: 100%;
      &:has(.article__heading) {
        @include flex(column, space-between, flex-start);
      }
    }

    & img {
      position: absolute;
      inset: 0;
      width: 100%;
      height: 100%;
      transition: v.$main-transition;
    }
  }

  &__slide-btn {
    color: c.$black;
    height: func.rem(44);
    @include center;
    background-color: c.$grayish;
    font-size: 0.75em;
    font-weight: bold;
    text-align: center;
    transition: v.$main-transition;
    z-index: 1;
  }
}

//? Swiper JS
.swiper {
  $_btn-size: 2.5rem;

  padding-inline: 0.5rem;
  margin-inline: -0.5rem;
  cursor: grab;

  & .swiper-button-next,
  & .swiper-button-prev {
    transition: v.$main-transition;
    width: $_btn-size;
    height: $_btn-size;
    background-color: c.$black;
    border-radius: 50%;
    opacity: 0;
    translate: 0 calc(($_btn-size / 2) * -1);

    &:hover {
      background-color: c.$text-gray;
    }

    &[aria-disabled="true"] {
      visibility: hidden;
      opacity: 0;
    }

    &::after {
      width: func.rem(24);
      height: func.rem(24);
    }
  }

  & .swiper-button-prev::after {
    content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='white' viewBox='0 0 24 24'%3E%3Cpath fill-rule='evenodd' d='m7 12.0009 8.0012-8.0007 1.4142 1.4142-6.587 6.5866 6.5859 6.5868L15 20.002l-8-8.0011z' clip-rule='evenodd'%3E%3C/path%3E%3C/svg%3E");
    translate: 0 -55%;
  }
  & .swiper-button-next::after {
    content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='white' viewBox='0 0 24 24'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='m16.415 12.0011-8.0012 8.0007-1.4141-1.4143 6.587-6.5866-6.586-6.5868L8.415 4l8 8.0011z'/%3E%3C/svg%3E");
    translate: 10% -55%;
  }

  &:hover .swiper-button-next,
  &:hover .swiper-button-prev {
    opacity: 1;
  }

  & .swiper-scrollbar {
    width: 100%;
    left: 0;
  }

  & .swiper {
    padding-inline: 0.25rem;
    margin-inline: -0.25rem;
  }

  & .swiper-scrollbar {
    opacity: 1 !important;

    & .swiper-scrollbar-drag {
      background-color: c.$black;
    }
  }

  .swiper-wrapper {
    padding-top: 0.5rem;
    margin-top: -0.5rem;
  }
}
