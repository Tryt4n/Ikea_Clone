@use "../../../../abstracts/mixins" as *;
@use "../../../../abstracts/colors" as c;
@use "../../../../abstracts/variables" as v;
@use "../../../../base/functions" as func;
@use "../../../../base/breakpoints" as b;

.accordions-list {
  font-size: func.rem(14);

  @media screen and (width >= b.$tablet) {
    @include flex();
    gap: 1rem;
  }

  &__list-element {
    border-top: func.rem(1) solid c.$gray;
    &:last-of-type {
      border-bottom: func.rem(1) solid c.$gray;
    }

    & > * {
      width: 100%;
    }

    @media screen and (width >= b.$tablet) {
      width: 25%;
      border-top: none;
      &:last-of-type {
        border-bottom: none;
      }
    }
  }
}

@media screen and (width < b.$tablet) {
  .accordion {
    display: grid;
    grid-template-rows: 0fr;
    transition: grid-template-rows 500ms ease-in-out;

    & > ul {
      overflow: hidden;
    }
  }
}

.accordion[aria-hidden="false"] {
  grid-template-rows: 1fr;
}

.accordion-btn {
  width: 100%;
  @include flex(row, space-between, center);
  padding-block: 2.5rem;
  padding-inline: 0.25em;
  font-weight: bold;

  & svg {
    transform: rotate(90deg);
    transition: v.$main-transition;
  }

  &[aria-expanded="true"] svg {
    rotate: 180deg;
  }

  @media screen and (width >= b.$tablet) {
    padding: 0;
    margin-bottom: func.rem(20);
  }

  &__list-name {
    display: inline-block;
    font-weight: bold;
    margin-bottom: func.rem(25);
  }
}

.accordion-inner-list {
  & li {
    padding-block: 0.5rem;
    padding-inline: 0.25em;
    &:last-of-type {
      padding-bottom: 2.5rem;
    }
    @media screen and (width >= b.$tablet) {
      padding-inline: 0;
    }
  }

  & a {
    width: 100%;
    display: inline-block;
  }
}
