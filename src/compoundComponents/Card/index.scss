@use "../../abstracts/mixins" as *;
@use "../../abstracts/colors" as c;
@use "../../abstracts/variables" as v;
@use "../../base/functions" as func;
@use "../../base/breakpoints" as b;

.cards-container {
  @include flex(row);

  &:has(> section) {
    gap: func.rem(1);
    flex-wrap: wrap;

    & > * {
      flex: 1;
    }

    @media screen and (width >= b.$tablet) {
      & > * {
        min-width: calc(25% - 0.75px);
      }
    }

    @media screen and (b.$mobile-md <= width < b.$tablet) {
      & > * {
        min-width: calc(50% - 0.5px);
      }
    }

    @media screen and (width < b.$mobile-md) {
      & > * {
        min-width: 100%;
      }
    }
  }

  .card {
    @include flex(column);
    // color: c.$black;
    text-wrap: balance;
    height: calc(100% - 2.5rem);
    background-color: c.$gray;

    // &--light-gray {
    //   background-color: c.$grayish;
    // }
    // &--blue {
    //   background-color: c.$blue;
    //   color: c.$white;
    // }
    // &--brown {
    //   background-color: c.$brown;
    //   color: c.$white;
    // }
    // &--light-brown {
    //   background-color: c.$light-brown;
    // }
    // &--violet {
    //   background-color: c.$violet;
    //   color: black;
    // }
    // &--yellow {
    //   background-color: c.$yellow;
    // }
    // &--light-yellow {
    //   background-color: c.$light-yellow;
    // }

    &:hover {
      text-decoration: none;
      &:is(a) {
        & h2,
        & h3,
        & h4,
        & h5,
        & h6 {
          text-decoration: underline;
          text-underline-offset: 0.3em;
        }
      }
      & img {
        filter: grayscale(0.5);
      }
    }

    img {
      width: 100%;
      aspect-ratio: 1;
      object-fit: cover;
      transition: v.$main-transition;

      &.aspect-ratio-3-4 {
        aspect-ratio: 3/4;
      }
    }

    &__text-wrapper {
      height: 100%;
      @include flex(column, space-between, flex-start);
      padding: 2rem;

      & h2,
      & h3,
      & h4,
      & h5,
      & h6 {
        margin-bottom: 0.25rem;
        font-size: func.rem(25);
        line-height: 2.5rem;
        @media screen and (width < b.$mobile-md) {
          font-size: func.rem(18);
          line-height: 1.778;
        }
      }

      & p {
        font-size: 1rem;
        line-height: 1.625;
        color: inherit;
      }
    }

    &__btn {
      margin-top: 4rem;

      & svg {
        width: 100%;
        height: 100%;
        padding: 1rem;
      }

      @media screen and (width < b.$mobile-md) {
        margin-top: 2rem;
      }
    }

    &:is(section) {
      height: auto;
      color: c.$text-gray;

      & .card__text-wrapper {
        justify-content: flex-start;
        font-size: func.rem(14);

        & > *:not(:last-child) {
          margin-bottom: 0.25rem;
        }

        & h1,
        & h2,
        & h3,
        & h4,
        & h5,
        & h6 {
          font-size: 1rem;
          line-height: 1.5;
          color: c.$black;
        }

        & p {
          font-size: inherit;
          line-height: func.rem(22);
          text-wrap: balance;
        }

        & a {
          text-decoration: underline;
          transition: v.$main-transition;

          &:hover {
            color: c.$black;
          }
        }
      }
    }
  }
}
